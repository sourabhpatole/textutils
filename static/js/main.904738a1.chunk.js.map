{"version":3,"sources":["components/NavBar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","mode","href","title","type","id","aboutText","placeholder","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","s","split","reverse","join","document","getElementById","select","navigator","clipboard","writeText","length","prototype","PropTypes","string","isRequired","defaultProps","Alert","alert","class","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.904738a1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input mx-2\"\r\n                onClick={props.toggleMode}\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label mx-2\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              ></label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavBar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavBar.defaultProps = { title: \"set title here\", aboutText: \"About\" };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to Uppercase\", \"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to Lowercase\", \"success\");\r\n  };\r\n  const reverse = (s) => {\r\n    let newText = text.split(\"\").reverse().join(\"\");\r\n    setText(newText);\r\n    props.showAlert(\"converted to Reverse\", \"success\");\r\n  };\r\n  const extraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Remove extra spaces\", \"success\");\r\n  };\r\n\r\n  const clearText = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Erased\", \"success\");\r\n  };\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copied\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"handle onchange case clicked\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div\r\n          className=\"mb-3\"\r\n          style={{\r\n            color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n          }}\r\n        >\r\n          <label htmlFor=\"myBox\" className=\"form-label\">\r\n            Enter the text\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#57616a\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1 \" onClick={handleUpClick}>\r\n          Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>\r\n          Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={reverse}>\r\n          Reverse\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={extraSpaces}>\r\n          Remove extra space\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={clearText}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          {text.split(\" \").length - 1} Words and {text.length} Characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to Read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter Something to preview Here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        class={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","// import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { useState } from \"react\";\r\n\r\n// import About from \"./components/About\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport TextForm from \"./components/TextForm\";\r\nimport Alert from \"./components/Alert\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  };\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#57616a\";\r\n      showAlert(\"Dark mode is Enabled\", \"success\");\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"light mode is Enabled\", \"success\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n      <Alert alert={alert} />\r\n      <div className=\"container my-3\">\r\n        <TextForm showAlert={showAlert} heading=\"Manipulate text\" mode={mode} />\r\n      </div>\r\n      {/* <div className=\"container\"><About /></div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}